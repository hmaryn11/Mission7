// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mission6.Models;

namespace Mission6.Migrations
{
    [DbContext(typeof(MovieEntryContext))]
    [Migration("20230222025027_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.32");

            modelBuilder.Entity("Mission6.Models.Category", b =>
                {
                    b.Property<int>("categoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("categoryName")
                        .HasColumnType("TEXT");

                    b.HasKey("categoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            categoryID = 1,
                            categoryName = "Romance"
                        },
                        new
                        {
                            categoryID = 2,
                            categoryName = "Comedy"
                        },
                        new
                        {
                            categoryID = 3,
                            categoryName = "Romantic Comedy"
                        },
                        new
                        {
                            categoryID = 4,
                            categoryName = "Drama"
                        },
                        new
                        {
                            categoryID = 5,
                            categoryName = "Action/Adventure"
                        },
                        new
                        {
                            categoryID = 6,
                            categoryName = "Horror"
                        },
                        new
                        {
                            categoryID = 7,
                            categoryName = "Science Fiction"
                        },
                        new
                        {
                            categoryID = 8,
                            categoryName = "Documentary"
                        },
                        new
                        {
                            categoryID = 9,
                            categoryName = "Fantasy"
                        },
                        new
                        {
                            categoryID = 10,
                            categoryName = "Historical Fiction"
                        },
                        new
                        {
                            categoryID = 11,
                            categoryName = "Musical"
                        },
                        new
                        {
                            categoryID = 12,
                            categoryName = "Murder Mystery"
                        });
                });

            modelBuilder.Entity("Mission6.Models.EntryResponse", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Edited")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT")
                        .HasMaxLength(25);

                    b.Property<string>("Rating")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.Property<int>("categoryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("directorName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("lentTo")
                        .HasColumnType("TEXT");

                    b.Property<string>("movieTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("MovieId");

                    b.HasIndex("categoryID");

                    b.ToTable("Responses");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            Edited = true,
                            Rating = "PG-13",
                            Year = 2003,
                            categoryID = 3,
                            directorName = "Donald Petrie",
                            lentTo = "",
                            movieTitle = "How To Lose A Guy In Ten Days"
                        },
                        new
                        {
                            MovieId = 2,
                            Edited = true,
                            Rating = "PG",
                            Year = 2017,
                            categoryID = 5,
                            directorName = "Chris McKay",
                            lentTo = "",
                            movieTitle = "The Lego Batman Movie"
                        },
                        new
                        {
                            MovieId = 3,
                            Edited = true,
                            Rating = "PG",
                            Year = 1946,
                            categoryID = 4,
                            directorName = "Frank Capra",
                            lentTo = "",
                            movieTitle = "It's A Wonderful Life"
                        });
                });

            modelBuilder.Entity("Mission6.Models.EntryResponse", b =>
                {
                    b.HasOne("Mission6.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("categoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
